{
  "_id": "y3-RC2",
  "_rev": "3-6b014133b5beb5d0c640df8db31f5d15",
  "title": "AC Cutoff Frequency in RC-Series Circuit",
  "show_multimeter": "true",
  "circuit": [
    {
      "type": "function generator",
      "UID": "source",
      "frequencies": [
        "linear",
        100,
        8001,
        160
      ],
      "initialFrequency": 400,
      "amplitude": 50
    },
    {
      "type": "resistor",
      "UID": "r1",
      "resistance": [
        "uniform",
        360,
        910
      ],
      "connections": "b15,b21",
      "label": "R"
    },
    {
      "type": "capacitor",
      "UID": "C",
      "impedance": [
        "uniform",
        4,
        16
      ],
      "referenceFrequency": "159155",
      "comment": "at this freq, C = 1/X, in microfarads",
      "connections": "c9,c15",
      "label": "C"
    },
    {
      "type": "wire",
      "connections": "left_negative20,a21"
    },
    {
      "type": "wire",
      "connections": "left_positive6,a9"
    }
  ],
  "pages": [
    {
      "notes": "For this circuit:<br>&nbsp;&nbsp; <b>R</b> = [sparks.unit.convertMeasurement(r1.resistance + ' ohms')]<br>&nbsp;&nbsp; <b>C</b> = [sparks.vars.convertNano(C.getCapacitance(),'f')] ",
      "questions": [
        {
          "prompt": "Measure the power supply voltage <b>V<sub>PS</sub></b> in the circuit above.<br>",
          "subquestions": [
            {
              "prompt": "&nbsp;&nbsp;Voltage <b>V<sub>PS</sub></b> &nbsp;&nbsp;&nbsp; ",
              "shortPrompt": "Power-supply voltage",
              "tutorial": "tutorial-27",
              "show_read_multimeter_button": "true",
              "points": 10,
              "beforeScript": " /* --- BEFORESCRIPT --- */ /* --- DEFINE FUNCTIONS --- */ /* --- HOW MANY FREQ CHANGES? --- */ sparks.vars.fChange = function (f) { z = 0; y = f.sort(); len = y.length; for (var i = 1; i < len; i++) { if (y[i] != y[i - 1]) { z++; } } return (z); }; sparks.vars.didMeasureComponent = function (meta, component) { if(component == 'PS') {nodes = 'gnd,powerPosL';} else nodes = component.getNodes(); /* --- allow for probes on power rails --- */ if (nodes.indexOf('L9') >-1) {nodes+= ',powerPosL';} else if (nodes.indexOf('powerPosL') >-1) {nodes+= ',L9';} if (nodes.indexOf('L21') >-1) {nodes+= ', gnd';} else if (nodes.indexOf('gnd') >-1) {nodes+= ',L21';} if(component == 'PS') {console.log('didMeasureComponent: checking: did you measure PS via ' + nodes + ' ?');} else {console.log('didMeasureComponent: checking: did you measure ' + component.UID + ' via ' + nodes + ' ?');} return (nodes.indexOf(meta.redProbe) > -1 && nodes.indexOf(meta.blackProbe) > -1 && meta.redProbe !== meta.blackProbe); /* --- RETURNS BOOLEAN RESULT --- */ }; /* --- CHECK PROBE PLACEMENTS ---*/ sparks.vars.dbugProbes = function (meta) { console.log('blackProbe: ' + meta.blackProbe + ' redProbe: ' + meta.redProbe + ' meas value: ' + meta.val + ' ' + meta.units); var probesPS = ['PowerPosL', 'gnd', 'L21', 'L9']; /* --- encode valid PS measurements --- */ if (sparks.vars.didMeasureComponent(meta, r1)) { console.log('Measured R where R = ' + sparks.vars.R + ' ohms'); return ('R'); } else if (sparks.vars.didMeasureComponent(meta, C)) { console.log('Measured C where C = ' + sparks.vars.C + ' H'); return ('C'); } else if (sparks.vars.didMeasureComponent(meta, 'PS')) { console.log('Measured PS where VS = ' + sparks.vars.VS + ' V'); return ('PS'); } else { console.log('NOT measuring R or C or PS'); return (-1); } };  /* --- CHECK MEASURE OF x STORED IN q, COMPARE TO target VOLTAGE --- */ sparks.vars.checkMeasurement = function (q, target, x) { console.log('====== Checking measurements for this question:'); console.log(q); q.correct_answer = Math.round(10 * target) / 10; q.points_earned = 0; /* --- CHECK PROBES AND DMM SETUP --- */ if (!q.meta.units && !q.meta.val) { /* --- NO MEASUREMENT --- */ if (q.meta.blackProbe && q.meta.redProbe) { /* --- PROBES PLACED BUT NO READING TAKEN--- */ q.feedback = 'Use the <b><i>Read Multimeter</i></b> button to record your circuit measurements.'; } else /* --- PROBES NOT PLACED AND NO READING TAKEN--- */ { q.feedback = 'Connect the DMM probes and use the <b><i>Read Multimeter</i></b> button to measure the circuit.'; } } else if (!q.meta.amplitude && isNaN(q.meta.val)) { /* --- PROBES NOT PLACED IN CIRCUIT --- */ q.feedback = 'Connect both DMM probes to your circuit to make measurements.'; } else if (q.meta.dmmDial != 'acv_200' && q.meta.dmmDial != 'acv_750') { /* --- PROBES PLACED BUT BAD DMM KNOB SET --- */ q.feedback = 'Use the DMM set to measure <b>AC voltages.</b>'; if (q.meta.val !== null && !isNaN(q.meta.val)) { /* --- GOT A READING ALBEIT BAD --- */ q.answer = sparks.unit.convertMeasurement(Math.round(10000 * q.meta.val) / 10000 + ' ' + q.meta.units); } } else /* --- CHECK ACV READING --- */ { q.answer = Math.round(10 * q.meta.val) / 10; if (!q.meta.frequency) { /* --- FREQ NOT CHANGED, SO USE INIT FREQ --- */ sparks.vars.Freq = source.initialFrequency; } else { /* --- USE CURRENT FREQ VALUE --- */ sparks.vars.Freq = sparks.unit.convertMeasurement(q.meta.frequency + 'Hz'); } probePlacement = sparks.vars.dbugProbes(q.meta); if (probePlacement == x) /* --- YES, PROBES ACROSS x ---*/ { if (q.meta.dmmDial == 'acv_200') { /* --- DMM KNOB ON ACV_200 ---*/ if (close(target, q.answer, 15 / target)) { q.correct_answer = q.answer; if (q.shortPrompt.indexOf('low') > 0 || (q.shortPrompt.indexOf('high') > 0 && sparks.vars.fChange(sparks.vars.freqs) > 0) || q.shortPrompt.indexOf('upply') > 0) { /* --- BRAVO! ---*/ q.points_earned = 10; q.feedback = 'Excellent! You measured <b>V<sub>' + x + '</sub></b> at ' + sparks.vars.Freq; } else { /* --- NO CHANGE OF FREQ ---*/ q.points_earned = 2; q.feedback = 'You measured well, but not at a different frequency, as directed.'; } } else { /* --- UKNOWN RESULT ---*/ q.feedback = 'The DMM appears to have malfunctioned. Sorry! Try again?'; } } else { /* --- DMM KNOB ON ACV_750 ---*/ if (close(Math.round(target), q.answer, 20 / target)) { /* --- MEASURE IS CLOSE ---*/ if (q.shortPrompt.indexOf('low') > 0 || (q.shortPrompt.indexOf('high') > 0 && sparks.vars.fChange(sparks.vars.freqs) > 0) || q.shortPrompt.indexOf('upply') > 0) { /* --- ALMOST RIGHT AND FREQ CHANGED OK ---*/ q.points_earned = 2; q.feedback = 'Essentially right, but you need to <b>use the most precise scale</b> on the DMM for precision.'; } else { /* --- NO CHANGE OF FREQ ---*/ q.feedback = 'You need to use a more precise DMM setting, and at a different frequency, as directed.'; } } else { /* --- MEASURE IS NOT CLOSE ---*/ q.feedback = 'You placed the probes in the right place, but should use a more precise DMM setting. Sorry!'; } } } else if (probePlacement) /* --- PROBES ACROSS WRONG COMPONENT --- */ { if (close(target, q.answer, 15 / target)) { /* --- VALUE ACROSS WRONG COMPONENT IS CLOSE ---*/ console.log('close value, but bad probe placement: across ' + x); q.feedback = 'No, even though the measures appear close, you did not measure across ' + x + '.'; } else { /* --- VALUE IS NOT CLOSE ---*/ q.feedback = 'No, you need to measure across ' + x + ' to find <b>V<sub>' + x + '</sub></b>.'; } } else { /* --- PROBE PLACEMENTS UNKNOWN ---*/ q.feedback = 'What happened? You did not appear to measure across <b>' + x + '</b>.'; } q.correct_answer = sparks.unit.convertMeasurement(q.correct_answer + 'V'); q.answer = sparks.unit.convertMeasurement(q.answer + q.meta.units); if (q.points_earned > 0) { sparks.vars.Score++; } } console.log('V' + x + ' @ ' + sparks.vars.Freq + ': Meas = ' + q.answer + ' Actual = ' + sparks.unit.convertMeasurement(target + 'V') + ' ' + sparks.vars.pctDiff(q.meta.val, target)); return; }; /* --- END CHECK MEASUREMENT --- */ /* --- END BEFORESCRIPT --- */ ",
              "scoring": " /* --- VS SCORING AT FREQ F1 --- */ sparks.vars.Recalc(question.meta.frequency); sparks.vars.checkMeasurement(question, sparks.vars.VS, 'PS');"
            },
            {
              "prompt": "<hr>If <b>V<sub>PS</sub></b> were all applied to the resistor <b>R</b>, so that <b>V<sub>R</sub></b> equals <b>V<sub>PS</sub></b>, we could obtain maximum power from the circuit. But because of the capacitance from <b>C</b> in this AC circuit, at lower frequency values, <b>V<sub>R</sub></b> decreases, and the power available to <b>R</b> also decreases. <b>At what voltage V<sub>R</sub> will it&#39;s power be reduced to half the maximum value?</b>",
              "shortPrompt": "Half-power voltage",
              "points": 50,
              "tutorial": "tutorial-28",
              "radio": "true",
              "options": [
                {
                  "option": "[ /* --- FIRST OPPORTUNITY TO DEFINE FUNCTIONS --- */ sparks.vars.fXC = function (C, f) { return (1/(2 * Math.PI * C * f)); }; sparks.vars.fZ = function (r, x) { return (Math.sqrt(r * r + x * x)); }; sparks.vars.fV = function (v, x, z) { return (Math.round(10 * v * x / z) / 10); }; sparks.vars.pctDiff = function (n1, n2) { return (Math.round(100 * Math.abs(n2 - n1) / n2 * 100) / 100 + '% diff'); }; /* --- RECALC FUNCTION AT FREQ f */ sparks.vars.Recalc = function (f) { sparks.vars.XC = sparks.vars.fXC(sparks.vars.C, f); sparks.vars.Z = sparks.vars.fZ(sparks.vars.R, sparks.vars.XC); sparks.vars.VR = sparks.vars.fV(sparks.vars.VS, sparks.vars.R, sparks.vars.Z); sparks.vars.VC = sparks.vars.fV(sparks.vars.VS, sparks.vars.XC, sparks.vars.Z); sparks.vars.freqs.push(f); console.log(''); console.log('Recalc: f = ' + sparks.unit.convertMeasurement(f + 'Hz') + ', XC = ' + sparks.unit.convertMeasurement(sparks.vars.XC + 'ohms') + ', Z = ' + sparks.unit.convertMeasurement(sparks.vars.Z + 'ohms')); console.log('At this f, VS = ' + sparks.unit.convertMeasurement(sparks.vars.VS + 'V') +', VR = ' + sparks.unit.convertMeasurement(sparks.vars.VR + 'V') + ', VC = ' + sparks.unit.convertMeasurement(sparks.vars.VC + 'V')); }; /* --- CONVERT INDUCTANCE VALUES --- */ sparks.vars.convertNano = function (x, unit) { if (Math.log10(x) < -6) { /* --- HANDLE NANO --- */ roundedNanoX = Math.round(100 * x * 1e9) / 100; return (roundedNanoX + ' n' + unit); } else /* --- ALL OTHER --- */ { return (sparks.unit.convertMeasurement(x + unit)); } }; /*--- DEFINE RANDOM AMPLITUDE --- */ source.amplitude = Math.round(Math.random() * 300 + 160) / 10; /* --- STARTING VALUES --- */ sparks.vars.VS = source.amplitude / Math.sqrt(2); sparks.vars.R = r1.resistance; sparks.vars.C = C.getCapacitance(); sparks.vars.Cutoff = 1 / (2 * Math.PI * sparks.vars.R * sparks.vars.C); sparks.vars.RLoc = r1.getNodes(); sparks.vars.CLoc = C.getNodes(); sparks.vars.mySqrt2 = '<span style=\"white-space: nowrap;\";>&radic;<span style=\";text-decoration:overline;\">2&nbsp;</span></span>'; sparks.vars.freqs = new Array(); /* --- USE INITIAL FREQUENCY FOR DISTRACTERS --- */ sparks.vars.Recalc(source.initialFrequency); /* --- create distracters here and use them in scoring --- */ sparks.vars.a0 = sparks.unit.convertMeasurement(sparks.vars.VS / Math.SQRT2 + 'V'); sparks.vars.fbk0 = 'Good! The circuit will have <b>half</b> the maximum power at <b>V<sub>PS</sub></b> times 0.707, or <b>V<sub>PS</sub></b> divided by ' + sparks.vars.mySqrt2 + '. '; sparks.vars.pts0 = 50; sparks.vars.a1 = sparks.unit.convertMeasurement(sparks.vars.VS / 2 + 'V'); sparks.vars.fbk1 = 'No, this is just half the supply voltage, <b>V<sub>PS</sub></b>. Check the tutorial for more help.'; sparks.vars.pts1 = 0; sparks.vars.a2 = sparks.unit.convertMeasurement(sparks.vars.VC + 'V'); sparks.vars.fbk2 = 'No, the half power point is based on the supply voltage, <b>V<sub>PS</sub></b>. Check the tutorial for more help.'; sparks.vars.pts2 = 0; sparks.vars.a3 = sparks.unit.convertMeasurement(sparks.vars.VS * 2 + 'V'); sparks.vars.fbk3 = 'No, that is twice the supply voltage, <b>V<sub>PS</sub></b>. The capacitor impedance will cause <b>V<sub>R</sub></b> to be <i>less than</i> the supply voltage. Check the tutorial for more help.'; sparks.vars.pts3 = 0; sparks.vars.a4 = sparks.unit.convertMeasurement(sparks.vars.VS + 'V'); sparks.vars.fbk4 = 'No, you chose the full supply voltage value, <b>V<sub>PS</sub></b>. Reduced power will occur with reduced voltage across <b>R</b>. Check the tutorial for more help.'; sparks.vars.pts4 = 0; sparks.vars.a5 = sparks.unit.convertMeasurement(sparks.vars.VS * Math.SQRT2 + 'V'); sparks.vars.fbk5 = 'No, that is even <i>more</i> than the supply voltage, <b>V<sub>PS</sub></b>. The capacitor impedance will cause <b>V<sub>R</sub></b> to be <i>less than</i> the supply voltage. Check the tutorial for more help.'; sparks.vars.pts5 = 0; sparks.vars.a6 = sparks.unit.convertMeasurement(sparks.vars.VC * Math.SQRT2 + 'V'); sparks.vars.fbk6 = 'No, the half power point is based on the supply voltage, <b>V<sub>PS</sub></b>. Check the tutorial for more help.'; sparks.vars.pts6 = 0; sparks.vars.a7 = sparks.unit.convertMeasurement(sparks.vars.VR * Math.SQRT2 + 'V'); sparks.vars.fbk7 = 'No, the half power point is based on the supply voltage, <b>V<sub>PS</sub></b>. Check the tutorial for more help.'; sparks.vars.pts7 = 0; sparks.vars.a0; ]"
                },
                {
                  "option": "[sparks.vars.a1;]"
                },
                {
                  "option": "[sparks.vars.a2;]"
                },
                {
                  "option": "[sparks.vars.a3;]"
                },
                {
                  "option": "[sparks.vars.a4;]"
                },
                {
                  "option": "[sparks.vars.a5;]"
                },
                {
                  "option": "[sparks.vars.a6;]"
                }
              ],
              "scoring": " sparks.vars.Recalc(question.meta.frequency); question.correct_answer = sparks.vars.a0; question.points = sparks.vars.pts0; question.points_earned = 0; if (question.answer == sparks.vars.a0) { question.feedback = sparks.vars.fbk0; question.points_earned = sparks.vars.pts0; } else if (question.answer == sparks.vars.a1) { question.feedback = sparks.vars.fbk1; } else if (question.answer == sparks.vars.a2) { question.feedback = sparks.vars.fbk2; } else if (question.answer == sparks.vars.a3) { question.feedback = sparks.vars.fbk3; } else if (question.answer == sparks.vars.a4) { question.feedback = sparks.vars.fbk4; } else if (question.answer == sparks.vars.a5) { question.feedback = sparks.vars.fbk5; } else if (question.answer == sparks.vars.a6) { question.feedback = sparks.vars.fbk6; } else if (question.answer == sparks.vars.a7) { question.feedback = sparks.vars.fbk7; }"
            }
          ]
        },
        {
          "prompt": "What is the <b>cutoff frequency</b> for this circuit? <br>(pick the closest value)",
          "shortPrompt": "Cutoff Frequency",
          "points": 50,
          "tutorial": "tutorial-28",
          "radio": "true",
          "options": [
            {
              "option": "[sparks.unit.convertMeasurement(sparks.vars.Cutoff + 'Hz');]",
              "points": 50
            },
            {
              "option": "[sparks.unit.convertMeasurement(sparks.vars.Cutoff/Math.SQRT2 + 'Hz');]"
            },
            {
              "option": "[sparks.unit.convertMeasurement(sparks.vars.Cutoff*Math.SQRT2 + 'Hz');]"
            },
            {
              "option": "[sparks.unit.convertMeasurement(sparks.vars.Cutoff*(2+Math.random()/5) + 'Hz');]"
            },
            {
              "option": "[sparks.unit.convertMeasurement(1/r1.resistance/2/C.getCapacitance() + 'Hz');]"
            },
            {
              "option": "[sparks.unit.convertMeasurement(1/r1.resistance/2/C.getCapacitance() *(1+Math.random()/5) + 'Hz');]"
            },
            {
              "option": "[sparks.unit.convertMeasurement(1/r1.resistance/0.27566/C.getCapacitance() + 'Hz');]"
            }
          ],
          "scoring": " sparks.vars.Recalc(question.meta.frequency); /* --- update values since frequency may have changed --- */ question.correct_answer = sparks.unit.convertMeasurement(sparks.vars.Cutoff + 'Hz'); question.points = 50; if (question.answer == question.correct_answer) { /* --- chosen answer is correct --- */ if (sparks.vars.dbugProbes(question.meta) == 'R' && sparks.vars.fChange(sparks.vars.freqs) > 0) { /* --- probes placed right and frequency changes detected --- */ question.feedback = 'Right on! Near this frequency, the capacitor &quot;impedes&quot; half the maximum circuit power. This is called the <i>cutoff frequency</i>.'; question.points_earned = 50; } else { /* --- appears to be lucky guess --- */ question.feedback = 'Wow, did you guess at that answer? You need to measure <b>V<sub>R</sub></b> while changing the frequency and watching for the voltage that reduces the <b>power</b> by half. Check out the tutorial.'; question.points_earned = 0; } } else { /* --- chosen answer is incorrect --- */ if (sparks.vars.dbugProbes(question.meta) == 'R') { /* --- measurements were made --- */ do_measure = ''; } else { do_measure = 'measure <b>V<sub>R</sub></b> and '; } question.feedback = 'No. You need to ' + do_measure + 'find the frequency that drops the voltage to reduce the <b>power</b> to half of the maximum possible value. Check out the tutorial.'; question.points_earned = 0; }"
        }
      ]
    }
  ]
}